{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.camelCaseToKebabCase = exports.getCurrentGaugeValueByPercentage = exports.getCurrentGaugePercentageByValue = exports.degToRad = exports.normalize = exports.floatingNumber = exports.percentToRad = exports.mergeObjects = exports.isEmptyObject = exports.calculatePercentage = void 0;\nvar calculatePercentage = function (minValue, maxValue, value) {\n  if (value < minValue) {\n    return 0;\n  } else if (value > maxValue) {\n    return 1;\n  } else {\n    var percentage = (value - minValue) / (maxValue - minValue);\n    return percentage;\n  }\n};\nexports.calculatePercentage = calculatePercentage;\nvar isEmptyObject = function (obj) {\n  return Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nexports.isEmptyObject = isEmptyObject;\nvar mergeObjects = function (obj1, obj2) {\n  var mergedObj = __assign({}, obj1);\n  Object.keys(obj2).forEach(function (key) {\n    var val1 = obj1[key];\n    var val2 = obj2[key];\n    if (Array.isArray(val1) && Array.isArray(val2)) {\n      mergedObj[key] = val2;\n    } else if (typeof val1 === 'object' && typeof val2 === 'object') {\n      mergedObj[key] = (0, exports.mergeObjects)(val1, val2);\n    } else if (val2 !== undefined) {\n      mergedObj[key] = val2;\n    }\n  });\n  return mergedObj;\n};\nexports.mergeObjects = mergeObjects;\n//Returns the angle (in rad) for the given 'percent' value where percent = 1 means 100% and is 180 degree angle\nvar percentToRad = function (percent, angle) {\n  return percent * (Math.PI / angle);\n};\nexports.percentToRad = percentToRad;\nvar floatingNumber = function (value, maxDigits) {\n  if (maxDigits === void 0) {\n    maxDigits = 2;\n  }\n  return Math.round(value * Math.pow(10, maxDigits)) / Math.pow(10, maxDigits);\n};\nexports.floatingNumber = floatingNumber;\n// Function to normalize a value between a new min and max\nfunction normalize(value, min, max) {\n  return (value - min) / (max - min) * 100;\n}\nexports.normalize = normalize;\nvar degToRad = function (degrees) {\n  return degrees * (Math.PI / 180);\n};\nexports.degToRad = degToRad;\nvar getCurrentGaugePercentageByValue = function (value, gauge) {\n  return (0, exports.calculatePercentage)(gauge.minValue, gauge.maxValue, value);\n};\nexports.getCurrentGaugePercentageByValue = getCurrentGaugePercentageByValue;\nvar getCurrentGaugeValueByPercentage = function (percentage, gauge) {\n  var minValue = gauge.props.minValue;\n  var maxValue = gauge.props.maxValue;\n  var value = minValue + percentage * (maxValue - minValue);\n  return value;\n};\nexports.getCurrentGaugeValueByPercentage = getCurrentGaugeValueByPercentage;\nvar camelCaseToKebabCase = function (str) {\n  return str.replace(/[A-Z]/g, function (letter) {\n    return \"-\".concat(letter.toLowerCase());\n  });\n};\nexports.camelCaseToKebabCase = camelCaseToKebabCase;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","camelCaseToKebabCase","getCurrentGaugeValueByPercentage","getCurrentGaugePercentageByValue","degToRad","normalize","floatingNumber","percentToRad","mergeObjects","isEmptyObject","calculatePercentage","minValue","maxValue","percentage","obj","keys","constructor","obj1","obj2","mergedObj","forEach","key","val1","val2","Array","isArray","undefined","percent","angle","Math","PI","maxDigits","round","pow","min","max","degrees","gauge","props","str","replace","letter","concat","toLowerCase"],"sources":["C:/Users/Lenovo/Documents/ipondwebsite/node_modules/react-gauge-component/dist/lib/GaugeComponent/hooks/utils.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCaseToKebabCase = exports.getCurrentGaugeValueByPercentage = exports.getCurrentGaugePercentageByValue = exports.degToRad = exports.normalize = exports.floatingNumber = exports.percentToRad = exports.mergeObjects = exports.isEmptyObject = exports.calculatePercentage = void 0;\nvar calculatePercentage = function (minValue, maxValue, value) {\n    if (value < minValue) {\n        return 0;\n    }\n    else if (value > maxValue) {\n        return 1;\n    }\n    else {\n        var percentage = (value - minValue) / (maxValue - minValue);\n        return (percentage);\n    }\n};\nexports.calculatePercentage = calculatePercentage;\nvar isEmptyObject = function (obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nexports.isEmptyObject = isEmptyObject;\nvar mergeObjects = function (obj1, obj2) {\n    var mergedObj = __assign({}, obj1);\n    Object.keys(obj2).forEach(function (key) {\n        var val1 = obj1[key];\n        var val2 = obj2[key];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            mergedObj[key] = val2;\n        }\n        else if (typeof val1 === 'object' && typeof val2 === 'object') {\n            mergedObj[key] = (0, exports.mergeObjects)(val1, val2);\n        }\n        else if (val2 !== undefined) {\n            mergedObj[key] = val2;\n        }\n    });\n    return mergedObj;\n};\nexports.mergeObjects = mergeObjects;\n//Returns the angle (in rad) for the given 'percent' value where percent = 1 means 100% and is 180 degree angle\nvar percentToRad = function (percent, angle) {\n    return percent * (Math.PI / angle);\n};\nexports.percentToRad = percentToRad;\nvar floatingNumber = function (value, maxDigits) {\n    if (maxDigits === void 0) { maxDigits = 2; }\n    return Math.round(value * Math.pow(10, maxDigits)) / Math.pow(10, maxDigits);\n};\nexports.floatingNumber = floatingNumber;\n// Function to normalize a value between a new min and max\nfunction normalize(value, min, max) {\n    return ((value - min) / (max - min)) * 100;\n}\nexports.normalize = normalize;\nvar degToRad = function (degrees) {\n    return degrees * (Math.PI / 180);\n};\nexports.degToRad = degToRad;\nvar getCurrentGaugePercentageByValue = function (value, gauge) { return (0, exports.calculatePercentage)(gauge.minValue, gauge.maxValue, value); };\nexports.getCurrentGaugePercentageByValue = getCurrentGaugePercentageByValue;\nvar getCurrentGaugeValueByPercentage = function (percentage, gauge) {\n    var minValue = gauge.props.minValue;\n    var maxValue = gauge.props.maxValue;\n    var value = minValue + (percentage) * (maxValue - minValue);\n    return value;\n};\nexports.getCurrentGaugeValueByPercentage = getCurrentGaugeValueByPercentage;\nvar camelCaseToKebabCase = function (str) { return str.replace(/[A-Z]/g, function (letter) { return \"-\".concat(letter.toLowerCase()); }); };\nexports.camelCaseToKebabCase = camelCaseToKebabCase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}